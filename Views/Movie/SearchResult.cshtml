@model MovieViewModel;
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Search - ";
    var user = await userManager.GetUserAsync(User);

    string CapitalizeFirstLetter(string str)
    {
        if (str == null)
            return null;

        if (str.Length > 1)
            return char.ToUpper(str[0]) + str.Substring(1);

        return str.ToUpper();
    }
}


<div>
    <form class="details-main" asp-action="SaveMovie" method="post">
        @* Validation check *@
        <input type="hidden" asp-for="Movie.Poster" />
        <img class="details-img" src="@Model.Movie.Poster" />
        <dl class="row details-info">
            <dt class="col-sm-2">
                Title
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Title" />
                @Model.Movie.Title
            </dd>
            <dt class="col-sm-2">
                Genre
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Genre" />
                @Model.Movie.Genre
            </dd>
            <dt class="col-sm-2">
                Runtime
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Runtime" />
                @Model.Movie.Runtime
            </dd>
            <dt class="col-sm-2">
                Released
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Year" />
                @Model.Movie.Year
            </dd>
            <dt class="col-sm-2">
                Plot
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Plot" />
                @Model.Movie.Plot
            </dd>
            <dt class="col-sm-2">
                Director
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Director" />
                @Model.Movie.Director
            </dd>
            <dt class="col-sm-2">
                Writer
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Writer" />
                @Model.Movie.Writer
            </dd>
            <dt class="col-sm-2">
                Actors
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Actors" />
                @Model.Movie.Actors
            </dd>
            <dt class="col-sm-2">
                Awards
            </dt>
            <dd class="col-sm-10">
                <input type="hidden" asp-for="Movie.Awards" />
                @Model.Movie.Awards
            </dd>
            <h2>Ratings</h2>
            <dd class="col-sm-10">
                <ul class="rating-list">
                    @if (Model.Ratings != null)
                    {
                        @for (int i = 0; i < Model.Ratings.Count; i++)
                        {
                            <li>
                                @{
                                    string imageName = "";
                                    switch (Model.Ratings[i].Source)
                                    {
                                        case "Internet Movie Database":
                                            imageName = "imdb.png";
                                            break;
                                        case "Metacritic":
                                            imageName = "metacritic.png";
                                            break;
                                        case "Rotten Tomatoes":
                                            imageName = "rotten_tomatoes.png";
                                            break;
                                    }
                                }
                                <img class="rating-img" src="/images/icons/@imageName">
                                <p class="rating-score">@Model.Ratings[i].Value</p>
                                <input type="hidden" asp-for="Ratings[i].Source" />
                                <input type="hidden" asp-for="Ratings[i].Value" />
                            </li>
                        }
                    }
                    else
                    {
                        <li>
                            <p>No ratings found</p>
                        </li>
                    }
                </ul>
            </dd>
            <h2>Streaming options</h2>
            <dd class="col-sm-10">
                <ul class="stream-list">
                    @if (Model.StreamingServices != null)
                    {
                        @for (int i = 0; i < Model.StreamingServices.Count; i++)
                        {
                            <li>
                                <a href="@Model.StreamingServices[i].Link">
                                    <img class="stream-img" src="/images/icons/@(Model.StreamingServices[i].ServiceName).png">
                                </a>
                                <p>@CapitalizeFirstLetter(Model.StreamingServices[i].Type)@(Model.StreamingServices[i].Price != null ? "," : "") @Model.StreamingServices[i].Price</p>
                            </li>
                            <input type="hidden" asp-for="StreamingServices[i].ServiceName" />
                            <input type="hidden" asp-for="StreamingServices[i].Type" />
                            <input type="hidden" asp-for="StreamingServices[i].Link" />
                            <input type="hidden" asp-for="StreamingServices[i].Price" />
                        }
                    }
                    else
                    {
                        <li>
                            <p>No streaming options found</p>
                        </li>
                    }

                </ul>
            </dd>
        </dl>
        @if (user != null)
        {
            <div class="form-group detail-buttons">
                <input type="submit" value="Add to list" class="btn btn-primary" />
                <input type="button" value="Back to menu" onclick="location.href='@Url.Action("Index", "Movie")'" />
            </div>
        }
        else
        {
        <div class="form-group">
              <input type="button" class="nav-link" onclick="window.location.href='@Url.Page("/Account/Login", new { area = "Identity" })'" value="Login to add movie" />
        </div>
        }
    </form>
</div>